import { describe, it, expect } from 'vitest';
import { z } from 'zod';
import { getSchema } from './schema';

describe('getSchema', () => {
  it('should return the schema if schema is not a function', () => {
    const schema = z.object({
      name: z.string(),
    });
    const loaderData = {};
    const result = getSchema(schema, loaderData);
    expect(result).toBe(schema);
  });

  it('should return the schema generated by the function if schema is a function', () => {
    const schema = (loaderData: any) =>
      z.object({
        name: z.string().min(loaderData.minLength),
      });
    const loaderData = { minLength: 3 };
    const result = getSchema(schema, loaderData);
    expect(result.shape).toHaveProperty('name');
  });
});
